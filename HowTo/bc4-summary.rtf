{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fmodern\fcharset0 Courier-Bold;\f2\fmodern\fcharset0 Courier;
\f3\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red83\green83\blue83;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c40000\c40000\c40000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww19000\viewh20680\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf0 \cb2 \expnd0\expndtw0\kerning0
Log on to BC4 in uni
\f1 \

\f2\b0 ssh bc4\
\

\f0\b Log on to BC4 outside of uni
\f1 \

\f2\b0 ssh bc4x\

\f3 This is likely different for you
\f1\b \
\

\f0 Interactive GPU environment inside uni:
\f1 \

\f2\b0 srun --partition gpu --gres gpu:1 --account comsm0018 --time 0-00:15 --mem\cf3 =\cf0 64GB --pty bash
\f1\b \

\f2\b0 \

\f3 You need to change the account number to the correct one obviously.\
The time you request this interactive GPU for can be changed. Currently it is 15 minutes.\
\

\f0\b Copy a file over to BC4\

\f2\b0 scp fileA bc4:~/deepLearning/1lab/\
\

\f0\b Copy a file from BC4
\f2\b0 \
scp -r bc4:~/adl/lab-1/ logs\
\

\f3 Note that you add the -r if you are copying a folder, ie \'93recursive\'94\
\
\
____________________________________\

\f0\b \
			Queuing
\f3\b0 \
____________________________________\

\f0\b Queue a file to run
\f3\b0 \

\f2 sbatch batchscript.sh\

\f3 \
This queues up some script specified by the batch script batchscript.sh.\
When you do this, you get a jobid, which will be displayed when you do sbatch. You can also check it with squeue (seen later).\
Any outputs from your file like a printing will be outputted to a file called <jobid>.out\
Other outputs output regularly (like saved images go to the normal file locations)\
\
The contents of a batch script could be as follows:\

\f2 ____________\
\
#!/usr/bin/env bash\
#SBATCH --partition gpu\
#SBATCH --time 0-00:30\
#SBATCH --account comsm0018\
#SBATCH \'97-mail-type=END\
#SBATCH --mem 64GB\
#SBATCH --gres gpu:1\
\
# get rid of any modules already loaded\
module purge\
# load in the module dependencies for this script\
module load "languages/anaconda3/2019.07-3.6.5-tflow-1.14"\
\
python trainScript.py\
\
____________\

\f3 It specifies that:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
We want a GPU\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}The max amount of time it will run for before it cancels\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf0 {\listtext	\uc0\u8259 	}If this is really large, it might not run if there is a pending servicing of BC4 in eg, a week\
\pard\tx220\tx720\tx1440\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}The account (change this to be correct!)\
{\listtext	\uc0\u8226 	}Mail-type emails you in the case specified. END is whenever it finishes running (finished, or failed)\
\pard\tx220\tx720\tx1440\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}The memory (dunno what this does really)\
{\listtext	\uc0\u8226 	}The gpu?? (dunno what this does really)\
\pard\tx720\tx1440\pardeftab720\partightenfactor0
\cf0 \
It then purges modules and loads dependencies. I don\'92t really understand this bit, it was included in the deep coursework.\
You can specify who you email to as well.\
\
It finally executes the command \'93python trainScript.py\'94, which is just like you typing that into the console.\
\
\

\f0\b Checking the queue
\f3\b0 \
\pard\pardeftab720\partightenfactor0

\f2 \cf0 \expnd0\expndtw0\kerning0
squeue --user ja16475\

\f3 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\pardeftab720\partightenfactor0
\cf0 This would show ja16475\'92s current jobs queued up, and their status\
\
\

\f0\b Cancelling Jobs\
\pard\pardeftab720\partightenfactor0

\f2\b0 \cf0 \expnd0\expndtw0\kerning0
scancel <jobid>
\f1\b \
\
\pard\tx720\tx1440\pardeftab720\partightenfactor0

\f3\b0 \cf0 \kerning1\expnd0\expndtw0 No <> when you type it, though!\
\
}